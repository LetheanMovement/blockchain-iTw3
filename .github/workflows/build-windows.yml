name: Build - Windows

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

jobs:
  windows:
    runs-on: windows-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Cache Chocolatey Dependencies
        uses: actions/cache@v3
        with:
          path: C:\ProgramData\chocolatey\lib
          key: choco-cache-${{ hashFiles('**/dependencies.config') }}
          restore-keys: |
            choco-cache-
      - name: Eat the Choco
        run: |
          choco install qt5-default --version 5.15.2.20211228 -y
          choco install openssl --version 1.1.1.1500 -y
      - name: install msvc toolset
        uses: ilammy/msvc-dev-cmd@v1
      - name: Install boost
        uses: MarkusJx/install-boost@v2.4.1
        id: install-boost
        with:
          # REQUIRED: Specify the required boost version
          # A list of supported versions can be found here:
          # https://github.com/MarkusJx/prebuilt-boost/blob/main/versions-manifest.json
          boost_version: 1.80.0
          platform_version: 2022
          toolset: msvc
          link: static
      - name: Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64
      - name: build server
        env:
          QT_PREFIX_PATH: C:\dev\_sdk\Qt5.11.2\5.11.2
          INNOSETUP_PATH: C:\Program Files (x86)\Inno Setup 5\ISCC.exe
          ETC_BINARIES_PATH: C:\dev\deploy\etc-binaries
          BUILDS_PATH: C:\dev\deploy\zano
          OPENSSL_ROOT_DIR: C:\dev\_sdk\OpenSSL-Win64
          BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}
        run: |
          refreshenv
          mkdir build && cd build
          cmake -D TESTNET=TRUE -D OPENSSL_ROOT_DIR="%OPENSSL_ROOT_DIR%" -D CMAKE_PREFIX_PATH="%QT_MSVC_PATH%" -D BUILD_GUI=true -D STATIC=FALSE -G "Visual Studio 17 2022" -T host=x64 -DBoost_INCLUDE_DIR="${{steps.install-boost.outputs.BOOST_ROOT}}\include" -DBoost_LIBRARY_DIRS="${{steps.install-boost.outputs.BOOST_ROOT}}\lib" ..
          msbuild version.vcxproj -p:Subsystem="CONSOLE,5.02" -p:Configuration=Release -t:Build
          msbuild src/daemon.vcxproj -p:Subsystem="CONSOLE,5.02" -p:Configuration=Release -t:Build
          msbuild src/simplewallet.vcxproj -p:Subsystem="CONSOLE,5.02" -p:Configuration=Release -t:Build
          msbuild src/Lethean.vcxproj -p:Subsystem="WINDOWS,5.02" -p:Configuration=Release -t:Build
      - name: Tar files
        run: cd build/src && tar -cvf ../../testnet-server-windows-amd64.tar letheand.exe simplewallet.exe
      - uses: actions/upload-artifact@v3
        with:
          name: testnet-server-windows-amd64
          if-no-files-found: error
          path: testnet-server-windows-amd64.tar
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          prerelease: true
          generate_release_notes: true
          files: ${{ github.workspace }}/testnet-server-windows-amd64.tar
